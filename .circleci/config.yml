version: 2.1

orbs:
  docker: circleci/docker@1.2.1

executors:
  machine:
    parameters:
      image:
        default: ubuntu-1604:202007-01
        type: string
    machine:
      image: << parameters.image >>

jobs:
  get-tags:
    docker:
      - image: cimg/base:2020.07
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Get all available tags for cimg/node
          command: make get-tags name="cimg/node" output="./workspace/tags.txt"
      - persist_to_workspace:
          root: ./workspace
          paths:
            - tags.txt

  test:
    executor: machine
    parallelism: 4
    working_directory: ~/project
    steps:
      - checkout
      - attach_workspace:
          at: ./workspace
      - run:
          name: Build Docker images
          command: |
            circleci tests split <./workspace/tags.txt >./workspace/build-tags.txt
            make build \
              name="$CIRCLE_PROJECT_REPONAME" \
              progress=plain \
              versions="$(cat ./workspace/build-tags.txt)"
      - run:
          name: Test built Docker images
          command: |
            make test name="$CIRCLE_PROJECT_REPONAME" versions="$(cat ./workspace/build-tags.txt)"

  publish:
    executor: machine
    parallelism: 4
    working_directory: ~/project
    steps:
      - checkout
      - docker/check:
          use-docker-credentials-store: true
      - attach_workspace:
          at: ./workspace
      - run:
          name: Build Docker images
          command: |
            circleci tests split <./workspace/tags.txt >./workspace/build-tags.txt
            make build \
              name="$DOCKER_LOGIN/puppeteer" \
              progress=plain \
              versions="$(cat ./workspace/build-tags.txt)"

workflows:
  version: 2

  test:
    jobs:
      - get-tags
      - test:
          requires:
            - get-tags

  release:
    jobs:
      - get-tags
      - publish:
          context: DOCKER_CREDENTIALS
          requires:
            - get-tags
#    triggers:
#      - schedule:
#          cron: "0 0 * * *"
#          filters:
#            branches:
#              only:
#                - main
